{"ast":null,"code":"var _jsxFileName = \"/Users/learn/Desktop/dice-roller/src/App.js\";\nimport React, { Component } from 'react';\nimport Dice from './component/dice.js';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.diceRoller = () => {\n      let {\n        rolls\n      } = this.state;\n      let newRoll = Math.ceil(Math.random() * 6);\n      rolls.push(newRoll);\n      this.setState({\n        rolls: rolls\n      });\n    };\n\n    this.state = {\n      rolls: [],\n      rolled: 0\n    };\n  }\n\n  render() {\n    return React.createElement(Dice, {\n      log: this.state.rolls,\n      diceRoller: this.diceRoller,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/learn/Desktop/dice-roller/src/App.js"],"names":["React","Component","Dice","App","constructor","props","diceRoller","rolls","state","newRoll","Math","ceil","random","push","setState","rolled","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AACxBG,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAUlBC,UAVkB,GAUL,MAAM;AACf,UAAI;AAACC,QAAAA;AAAD,UAAU,KAAKC,KAAnB;AACA,UAAIC,OAAO,GAAGC,IAAI,CAACC,IAAL,CAAUD,IAAI,CAACE,MAAL,KAAgB,CAA1B,CAAd;AACAL,MAAAA,KAAK,CAACM,IAAN,CAAWJ,OAAX;AACA,WAAKK,QAAL,CAAc;AAACP,QAAAA,KAAK,EAAEA;AAAR,OAAd;AACH,KAfiB;;AAEd,SAAKC,KAAL,GAAa;AACTD,MAAAA,KAAK,EAAE,EADE;AAITQ,MAAAA,MAAM,EAAE;AAJC,KAAb;AAOH;;AAQDC,EAAAA,MAAM,GAAE;AACJ,WACI,oBAAC,IAAD;AACA,MAAA,GAAG,EAAI,KAAKR,KAAL,CAAWD,KADlB;AAEA,MAAA,UAAU,EAAI,KAAKD,UAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAMH;;AAzBuB;;AA4B5B,eAAeH,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport Dice from './component/dice.js';\nimport './App.css';\n\nclass App extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            rolls: [\n\n            ],\n            rolled: 0\n\n        }\n    }\n    diceRoller = () => {\n        let {rolls} = this.state\n        let newRoll = Math.ceil(Math.random() * 6)\n        rolls.push(newRoll)\n        this.setState({rolls: rolls})\n    }\n\n    render(){\n        return(\n            <Dice\n            log = {this.state.rolls}\n            diceRoller = {this.diceRoller}\n            />\n        )\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}